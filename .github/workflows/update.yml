name: update

permissions:
  contents: write

on:
  push:
  schedule:
    - cron:  '0 0 * * *'
  pull_request:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-24.04
    name: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: install 7z zip
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full zip jq

          7z -h
          zip -h

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -s "https://api.github.com/repos/shinchiro/mpv-winbuild-cmake/tags" | jq -r '.[0].name')
          # latest_tag=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -s "https://api.github.com/repos/shinchiro/mpv-winbuild-cmake/tags" | grep -m 1 '"name":' | awk -F'"' '{print $4}')
          echo $latest_tag
          echo "tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: 7z to zip
        run: |
          mkdir -p "$WORK_DIR"
          cd "$WORK_DIR"

          API_URL="https://api.github.com/repos/shinchiro/mpv-winbuild-cmake/releases/tags/${{ steps.get_tag.outputs.tag }}"
          echo "Fetching release info from $API_URL"

          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              -s "$API_URL" > release.json

          jq -r '.assets[] | select(.name | endswith(".7z")) | {name: .name, url: .browser_download_url}' release.json > assets.json

          while IFS= read -r asset; do
            file_name=$(echo "$asset" | jq -r '.name')
            download_url=$(echo "$asset" | jq -r '.url')

            echo "Downloading $file_name $download_url"
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/octet-stream" \
                -L -o "$file_name" "$download_url"

            if [ -f "$file_name" ]; then
              echo "Processing $file_name..."
              base_name="${file_name%.7z}"
              mkdir -p "temp_$base_name"
              7z x "$file_name" -o"temp_$base_name"
              cd "temp_$base_name"
              zip -r "../${base_name}.zip" .
              cd ..
              rm -rf "temp_$base_name" "$file_name"
              echo "Created ${base_name}.zip"
            fi
          done < <(jq -c '.' assets.json)

          echo "All files processed!"
          rm -f release.json assets.json
          ls -lh .

      - name: release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_tag.outputs.tag }}
          artifacts: mpv-files/*.zip
